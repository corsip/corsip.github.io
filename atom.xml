<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://corsip.github.io</id>
    <title>牧轩日志录</title>
    <updated>2020-02-01T07:32:31.839Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://corsip.github.io"/>
    <link rel="self" href="https://corsip.github.io/atom.xml"/>
    <logo>https://corsip.github.io/images/avatar.png</logo>
    <icon>https://corsip.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 牧轩日志录</rights>
    <entry>
        <title type="html"><![CDATA[FRP]]></title>
        <id>https://corsip.github.io/post/QLwCmJVDf</id>
        <link href="https://corsip.github.io/post/QLwCmJVDf">
        </link>
        <updated>2020-01-30T14:10:38.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[ffmpeg修仙之路]]></title>
        <id>https://corsip.github.io/post/GZRT7mxHf</id>
        <link href="https://corsip.github.io/post/GZRT7mxHf">
        </link>
        <updated>2020-01-11T01:35:44.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Windows 10 编译Mingw版本OpenCV]]></title>
        <id>https://corsip.github.io/post/C76sG8kdU</id>
        <link href="https://corsip.github.io/post/C76sG8kdU">
        </link>
        <updated>2019-09-20T12:28:08.000Z</updated>
        <summary type="html"><![CDATA[<p>本文介绍如何在Windows10环境下编译MingW版OpenCV，并且配置<a href="https://mirrors.lucoder.com">牧轩镜像</a>站CDN。</p>
]]></summary>
        <content type="html"><![CDATA[<p>本文介绍如何在Windows10环境下编译MingW版OpenCV，并且配置<a href="https://mirrors.lucoder.com">牧轩镜像</a>站CDN。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CMake版本升级]]></title>
        <id>https://corsip.github.io/post/XWuCpU95o</id>
        <link href="https://corsip.github.io/post/XWuCpU95o">
        </link>
        <updated>2019-09-12T08:26:11.000Z</updated>
        <summary type="html"><![CDATA[<p>CMake 是一个可扩展的开源系统，以独立于编译器的方式在操作系统中管理生成过程。与许多跨平台系统不同，CMake 旨在与本机生成环境结合使用。放置在每个源目录中的简单配置文件（称为 CMakeLists.txt 文件）用于生成标准生成文件（例如，在 Unix 上生成文件，在 Windows MSVC 中生成项目/工作区），这些文件以通常的方式使用。CMake 可以生成本机生成环境，该环境将编译源代码、创建库、生成包装和任意组合生成可执行文件。CMake 支持就地和出位生成，因此可以支持来自单个源树的多个生成。CMake 还支持静态和动态库生成。CMake 的另一个不错的功能是，它生成一个缓存文件，该文件旨在与图形编辑器一起使用。例如，当 CMake 运行时，它会查找文件、库和可执行文件，并且可能会遇到可选的生成指令。此信息将收集到缓存中，用户可能会在生成本机生成文件之前更改这些信息。</p>
]]></summary>
        <content type="html"><![CDATA[<p>CMake 是一个可扩展的开源系统，以独立于编译器的方式在操作系统中管理生成过程。与许多跨平台系统不同，CMake 旨在与本机生成环境结合使用。放置在每个源目录中的简单配置文件（称为 CMakeLists.txt 文件）用于生成标准生成文件（例如，在 Unix 上生成文件，在 Windows MSVC 中生成项目/工作区），这些文件以通常的方式使用。CMake 可以生成本机生成环境，该环境将编译源代码、创建库、生成包装和任意组合生成可执行文件。CMake 支持就地和出位生成，因此可以支持来自单个源树的多个生成。CMake 还支持静态和动态库生成。CMake 的另一个不错的功能是，它生成一个缓存文件，该文件旨在与图形编辑器一起使用。例如，当 CMake 运行时，它会查找文件、库和可执行文件，并且可能会遇到可选的生成指令。此信息将收集到缓存中，用户可能会在生成本机生成文件之前更改这些信息。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Windows系列产品大客户版批量激活]]></title>
        <id>https://corsip.github.io/post/Hm6MrGUmO</id>
        <link href="https://corsip.github.io/post/Hm6MrGUmO">
        </link>
        <updated>2019-08-04T04:10:26.000Z</updated>
        <summary type="html"><![CDATA[<p>本文介绍如何使用KMS激活Windows产品，包括操作系统、Office等。</p>
]]></summary>
        <content type="html"><![CDATA[<p>本文介绍如何使用KMS激活Windows产品，包括操作系统、Office等。</p>
]]></content>
    </entry>
</feed>